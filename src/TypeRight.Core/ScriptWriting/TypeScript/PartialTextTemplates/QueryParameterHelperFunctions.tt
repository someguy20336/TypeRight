<#@ template language="C#" visibility="public" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
function <#= TryAppendKeyValueFuncName #>(urlParams: URLSearchParams, key: string, value: any): void {
    if (value !== null && typeof value !== "undefined") {
        if (Array.isArray(value)) {
            for (let aryVal of value) {
                urlParams.append(key, aryVal.toString());
            }
        } else {
            urlParams.append(key, value);
        }
    }
}
<# if (_needsAppendObjectFunc) { #>

function <#= TryAppendObjectFuncName #>(urlParams: URLSearchParams, obj: any): void {
    for (let [key, val] of Object.entries(obj)) {
        <#= TryAppendKeyValueFuncName #>(urlParams, key, val);
    }
}
<# } #>

function <#= GetQueryStringFuncName #>(urlParams: URLSearchParams): string {
    let queryString = urlParams.toString();
    if (queryString !== "") {
        queryString = "?" + queryString;
    }
    return queryString;
}
